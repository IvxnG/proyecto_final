
    .then(function(response) {
        if (!response.ok) {
            throw new Error('Ocurrió un error al iniciar sesión.');
        }
        return response.json();
    })
    .then(function(data) {
        localStorage.setItem('token', data.token);
        localStorage.setItem('expiracion', data.expiracion);
        localStorage.setItem('nombreUsuario', nombreUsuario);
        localStorage.setItem('idUsuario', data.id_usuario);

        showAlert('Inicio de sesión exitoso!', 'success');
        setTimeout(function() {
            window.location.href = 'productos.html';
        }, 3000);
    })
    --------------------
    <?php
//Añadir las cabeceras CORS al inicio del archivo PHP
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");

// Manejar solicitud OPTIONS
if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    header("HTTP/1.1 200 OK");
    exit();
}

require '../../../vendor/autoload.php';
require_once('../../db_connection.php');
use Firebase\JWT\JWT;
use Firebase\JWT\Key;

$data = json_decode(file_get_contents("php://input"), true);

if (!empty($data)) {
    if (isset($data['nombre_usuario']) && isset($data['contrasena'])) {
        $nombre_usuario = $conn->real_escape_string($data['nombre_usuario']);
        $contrasena = $conn->real_escape_string($data['contrasena']);
        
        $sql_get_user = "SELECT id, contrasena FROM usuarios WHERE nombre_usuario = '$nombre_usuario'";
        $result_get_user = $conn->query($sql_get_user);
        
        if ($result_get_user->num_rows == 1) {
            $row = $result_get_user->fetch_assoc();
            if (password_verify($contrasena, $row['contrasena'])) {
                $token = uniqid();
                $expiracion = time() + (60 * 60); 
                $id_usuario = $row['id'];
                http_response_code(200);
                echo json_encode(array("token" => $token, "expiracion" => $expiracion, "id_usuario" => $id_usuario));
                // $key = 'ARAMCO33'; 
                // $issuedAt = time();
                // $expirationTime = $issuedAt + 7200; 
                // $id_usuario = $row['id'];
                // $payload = [
                //     'iss' => 'https://easymarketivan.000webhostapp.com/',
                //     'aud' => 'https://easymarketivan.000webhostapp.com/',
                //     'iat' => $issuedAt, 
                //     'exp' => $expirationTime, 
                //     'data' => [
                //         'id' => $row['id'],
                //         'nombre_usuario' => $nombre_usuario
                //     ]
                // ];

                // $jwt = JWT::encode($payload, $key, 'HS256');

                // http_response_code(200);
                // echo json_encode(array("token" => $jwt, "expiracion" => $expirationTime, "id_usuario" => $$id_usuario));
            } else {
                http_response_code(401);
                echo json_encode(array("mensaje" => "Credenciales incorrectas."));
            }
            
        } else {
            http_response_code(404);
            echo json_encode(array("mensaje" => "Usuario no encontrado."));
        }
    } else {
        http_response_code(400);
        echo json_encode(array("mensaje" => "Por favor, proporcione nombre de usuario y contraseña."));
    }
} else {
    http_response_code(400);
    echo json_encode(array("mensaje" => "No se enviaron datos."));
}

$conn->close();

CREATE PHP 
<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");

if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    header("HTTP/1.1 200 OK");
    exit();
}
if (
    (!isset($_SERVER['HTTP_REFERER']) || strpos($_SERVER['HTTP_REFERER'], 'https://easymarketivan.000webhostapp.com/') === false) &&
    (!isset($_SERVER['HTTP_ORIGIN']) || strpos($_SERVER['HTTP_ORIGIN'], 'https://easymarketivan.000webhostapp.com/') === false)
) {
    http_response_code(403);
    echo json_encode(array("mensaje" => "Acceso no autorizado."));
    exit();
}
require_once('../../db_connection.php');


// Recibir datos del formulario
$nombre = $_POST['nombre'];
$descripcion = $_POST['descripcion'];
$precio = $_POST['precio'];
$estado = $_POST['estado'];
$categoria = $_POST['categoria'];
$id_usuario = $_POST['id_usuario'];
$ubicacion = $_POST['ubicacion'];

// Recibir imagen y convertirla en base64
$imagen_base64 = base64_encode(file_get_contents($_FILES['imagen']['tmp_name']));

// Insertar datos en la base de datos
$sql = "INSERT INTO productos (nombre, descripcion, precio, estado, categoria, id_usuario, ubicacion, imagen, active) 
        VALUES ('$nombre', '$descripcion', '$precio', '$estado', '$categoria', '$id_usuario', '$ubicacion', '$imagen_base64', true)";

if ($conn->query($sql) === TRUE) {
    http_response_code(200);
    echo json_encode(array("mensaje" => "Producto creado correctamente."));
} else {
    http_response_code(500);
    echo json_encode(array("mensaje" => "Error al crear el producto: " . $conn->error));
}

$conn->close();
CREATE JS
async function verificarYRedirigir() {
    const variables = ['token', 'expiracion', 'idUsuario', 'nombreUsuario'];

    // Comprobamos si todas las variables existen en localStorage
    const todasExisten = variables.every(variable => localStorage.getItem(variable) !== null);

    if (todasExisten) {
        // Si todas las variables existen, verificamos que el idUsuario es válido
        const idUsuario = localStorage.getItem('idUsuario');
        const url = `https://easymarketivan.000webhostapp.com/api/users/auth/checkUser.php?idUsuario=${idUsuario}`;
        
        try {
            const response = await fetch(url);
            const data = await response.json();

            if (!data.existe) {
                localStorage.clear();
                showAlert('Usuario no válido, inicia sesión de nuevo!', 'error');
                setTimeout(function () {
                    window.location.href = '../index.html';
                }, 2000);
            } 
        } catch (error) {
            console.error('Error al verificar el Usuario:', error);
            localStorage.clear();
        }
    }else{
        localStorage.clear();
        window.location.href = '../index.html';
    }
}

verificarYRedirigir();

document.getElementById('createProductForm').addEventListener('submit', function(event) {
    event.preventDefault(); 
    console.log('Formulario enviado');

    // Obtener los datos del formulario
    const nombre = document.getElementById('nombre').value;
    const descripcion = document.getElementById('descripcion').value;
    const precio = document.getElementById('precio').value;
    const categoria = document.getElementById('categoria').value;
    const estado = document.getElementById('estado').value;
    const idUsuario = localStorage.getItem('idUsuario');
    const imagenInput = document.getElementById('imagen');
    const imagen = imagenInput.files[0];

    if (!nombre || !descripcion || !precio || !categoria || !estado || !imagen) {
        showAlert('Completa todos los campos!', 'error');
            setTimeout(function() {
                
        }, 4000);
        return; 
    }

    // Crear FormData y agregar los datos del formulario
    const formData = new FormData();
    formData.append('nombre', nombre);
    formData.append('descripcion', descripcion);
    formData.append('precio', precio);
    formData.append('categoria', categoria);
    formData.append('estado', estado);
    formData.append('id_usuario', idUsuario);
    formData.append('imagen', imagen);
    console.log(nombre);
    // Enviar datos al servidor
    enviarDatos(formData);
});

function enviarDatos(formData) {
    verificarYRedirigir();
    fetch('https://easymarketivan.000webhostapp.com/api/items/crud/create.php', {
        method: 'POST',
        body: formData
    })
    .then(response => {
       if( response.status == 200 ){
        console.log(response);
        showAlert('Producto puesto en venta!', 'success');
            setTimeout(function() {
                window.location.href = 'productos.html';
            }, 1500);
        }    
    })
    .catch(error => {
        console.error('Hubo un problema con tu operación de fetch:', error);
    });
}
function showAlert(message, type = 'error') {
    const alertMessage = document.getElementById('alertMessage');
    alertMessage.textContent = message;
    alertMessage.style.backgroundColor = type === 'error' ? '#ffdddd' : '#ddffdd';
    alertMessage.style.color = type === 'error' ? '#d8000c' : '#4f8a10';
    alertMessage.style.borderColor = type === 'error' ? '#d8000c' : '#4f8a10';
    alertMessage.style.display = 'block';

    setTimeout(function() {
        alertMessage.style.display = 'none';
    }, 3000);
}

DELETE php<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");

if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    header("HTTP/1.1 200 OK");
    exit();
}
if (
    (!isset($_SERVER['HTTP_REFERER']) || strpos($_SERVER['HTTP_REFERER'], 'https://easymarketivan.000webhostapp.com/') === false) &&
    (!isset($_SERVER['HTTP_ORIGIN']) || strpos($_SERVER['HTTP_ORIGIN'], 'https://easymarketivan.000webhostapp.com/') === false)
) {
    http_response_code(403);
    echo json_encode(array("mensaje" => "Acceso no autorizado."));
    exit();
}
require_once('../../db_connection.php');

$data = json_decode(file_get_contents("php://input"), true);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($data['id_producto'])) {
        $id_producto = intval($data['id_producto']);

        $sql = "UPDATE productos SET active = false WHERE id_producto = $id_producto";

        if ($conn->query($sql) === TRUE) {
            http_response_code(200);
            echo json_encode(array("mensaje" => "Producto desactivado correctamente."));
        } else {
            http_response_code(500);
            echo json_encode(array("mensaje" => "Error al desactivar el producto: " . $conn->error));
        }
    } else {
        http_response_code(400);
        echo json_encode(array("mensaje" => "El ID del producto no se proporcionó o es inválido."));
    }
}

$conn->close();




9878977777777777777
<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");

if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    header("HTTP/1.1 200 OK");
    exit();
}
if (
    (!isset($_SERVER['HTTP_REFERER']) || strpos($_SERVER['HTTP_REFERER'], 'https://easymarketivan.000webhostapp.com/') === false) &&
    (!isset($_SERVER['HTTP_ORIGIN']) || strpos($_SERVER['HTTP_ORIGIN'], 'https://easymarketivan.000webhostapp.com/') === false)
) {
    http_response_code(403);
    echo json_encode(array("mensaje" => "Acceso no autorizado."));
    exit();
}
require_once('../../db_connection.php');


// Recibir datos del formulario
$nombre = $_POST['nombre'];
$descripcion = $_POST['descripcion'];
$precio = $_POST['precio'];
$estado = $_POST['estado'];
$categoria = $_POST['categoria'];
$id_usuario = $_POST['id_usuario'];
$ubicacion = $_POST['ubicacion'];

// Recibir imagen y convertirla en base64
$imagen_base64 = base64_encode(file_get_contents($_FILES['imagen']['tmp_name']));

// Insertar datos en la base de datos
$sql = "INSERT INTO productos (nombre, descripcion, precio, estado, categoria, id_usuario, ubicacion, imagen, active) 
        VALUES ('$nombre', '$descripcion', '$precio', '$estado', '$categoria', '$id_usuario', '$ubicacion', '$imagen_base64', true)";

if ($conn->query($sql) === TRUE) {
    http_response_code(200);
    echo json_encode(array("mensaje" => "Producto creado correctamente."));
} else {
    http_response_code(500);
    echo json_encode(array("mensaje" => "Error al crear el producto: " . $conn->error));
}

$conn->close();

45464654
<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");

if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    header("HTTP/1.1 200 OK");
    exit();
}
require_once('../../db_connection.php');
require '../../../vendor/autoload.php';

use Firebase\JWT\JWT;
use Firebase\JWT\Key;

if ($conn->connect_error) {
    die("Conexión fallida: " . $conn->connect_error);
}

// Obtener el token del encabezado de la solicitud
$headers = getallheaders();

// if (!isset($headers['Authorization'])) {
//     http_response_code(401);
//     echo json_encode(array("mensaje" => "Token no proporcionado"));
//     exit();
// }

$jwt = str_replace('Bearer ', '', $headers['Authorization']);

$data = json_decode(file_get_contents("php://input"), true);

try {
    $key = 'ARAMCO33';
    $decoded = JWT::decode($jwt, new Key($key, 'HS256'));
    //$decoded_array = (array) $decoded;

    // Verificar si el token está expirado
    if ($decoded_array['exp'] < time()) {
        http_response_code(401);
        echo json_encode(array("mensaje" => "Token expirado"));
        exit();
    }

    // Verificar los datos del usuario en el token
    //$id_usuario_token = $decoded_array['data']->id;

    $id_producto = intval($data['id_producto']);
    $id_usuario_comprador = intval($data['id_usuario']);

    $sql1 = "INSERT INTO sells (id_producto, id_usuario) VALUES (?, ?)";
    $stmt1 = $conn->prepare($sql1);
    $stmt1->bind_param('ii', $id_producto, $id_usuario_comprador);

    $sql2 = "UPDATE productos SET active = false WHERE id_producto = ?";
    $stmt2 = $conn->prepare($sql2);
    $stmt2->bind_param('i', $id_producto);

    // if ($stmt1->execute() && $stmt2->execute()) {
    if ($stmt2->execute()) {
        http_response_code(200);
        echo json_encode(array("mensaje" => "Producto desactivado correctamente."));
    } else {
        http_response_code(500);
        echo json_encode(array("mensaje" => "Error al desactivar el producto: " . $conn->error));
    }

    $stmt1->close();
    $stmt2->close();
} catch (Exception $e) {
    http_response_code(400);
    echo json_encode(array("mensaje" => "Error procesando la solicitud", "error" => $e->getMessage()));
    exit();
}

$conn->close();
